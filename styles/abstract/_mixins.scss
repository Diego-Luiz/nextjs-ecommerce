@use './variables' as *;

//Element with position !== than static for being able to have absolute(s) children
@mixin containerWithAbsItem($display: inline-block, $position: relative){
    @if $display != inline-block {
        display: $display;
        position: $position;
    } @else {
        position: $position;
    }
}
@mixin defaultContainer {
    width: 100%;
    padding: $defaultContainerPadding;
    box-sizing: border-box;
}
@mixin defaultLink($display: inline-block) {
    display: $display;
    padding: .75em;
}
@mixin defaultBtn($display: inline-block, $bd-radius: 50px) {
    display: $display;
    padding: 1em 1.5em;
    border: {
        style: none;
        radius: $bd-radius;
    }
    font-size: var(--fz-btn);
}
@mixin mediaQ($query, $withScreen: false) {
    @if $withScreen == true {
        @media #{'screen'} and #{query} {
            @content
        }
    } @else {
        @media #{$query} {
            @content
        }
    }
}
@mixin supports($property) {
    @supports (#{$property}) {
        @content
    }
}
@mixin displayFlexCentered($column: false) {
    display: flex;
    justify-content: center;
    align-items: center;
    @if $column == true {
        flex-direction: column;
    }
}
//Element with background black + opacity to show the content behind it
@mixin absoluteBgBlackWithOpacity($opacity: .4, $zIndex){
    display: block;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, $opacity);
    position: absolute;
    inset: 0;
    z-index: $zIndex;
}